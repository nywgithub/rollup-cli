/*  Break-points
 -------------------------- */
/*  example:
    @include res('xs'){
        body{
            color:#fff;
        };
    }

    out:
    @media only screen and (min-width: 1440px) {
        body {
            color: #fff;
        }
    }
 -------------------------- */
@mixin res($key, $map: $--breakpoints) {

    // 循环断点Map，如果存在则返回
    @if map-has-key($map, $key) {
        @media only screen and #{inspect(map-get($map, $key))} {
            @content;
        }
    }

    @else {
        @warn "Undefeined points: `#{$map}`";
    }
}


/*  文字垂直居中
 -------------------------- */
/*  example:
    .text{
        height: 300px;
        @include utils-vertical-center;
    }
 -------------------------- */
@mixin utils-vertical-center {
    $selector: &;

    @at-root {
        #{$selector}::after {
            display: inline-block;
            content: "";
            height: 100%;
            vertical-align: middle
        }
    }
}


/*  单行文字截取
 -------------------------- */
@mixin utils-ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/*  禁用选取
 -------------------------- */
@mixin utils-user-select($value) {
    -moz-user-select: $value;
    -webkit-user-select: $value;
    -ms-user-select: $value;
}



/*  Retina图片
 -------------------------- */
/*  example:
    div.logo { 
        background: url("logo.png") no-repeat; 
        @include image-2x("logo2x.png", 100px, 25px); 
    }

    out:
    div.logo { 
        background: url("logo.png") no-repeat; 
    } 
    @media (min--moz-device-pixel-ratio: 1.3), 
    (-o-min-device-pixel-ratio: 2.6 / 2), 
    (-webkit-min-device-pixel-ratio: 1.3), 
    (min-device-pixel-ratio: 1.3), 
    (min-resolution: 1.3dppx) { 
        div.logo { 
            background-image: url("logo2x.png"); background-size: 100px 25px; 
        } 
    }
 -------------------------- */
@mixin image-2x($image, $width, $height) {

    @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
        /* on retina, use image that's scaled by 2 */
        background-image: url($image);
        background-size: $width $height;
    }
}



/*  Scrollbar
 -------------------------- */
@mixin scroll-bar {
    $--scrollbar-thumb-background: $--color-border-button;
    $--scrollbar-track-background: #fff;

    &::-webkit-scrollbar {
        z-index: 11;
        width: 6px;

        &:horizontal {
            height: 6px;
        }

        &-thumb {
            border-radius: 5px;
            width: 6px;
            background: $--scrollbar-thumb-background;
        }

        &-corner {
            background: $--scrollbar-track-background;
        }

        &-track {
            background: $--scrollbar-track-background;

            &-piece {
                background: $--scrollbar-track-background;
                width: 6px;
            }
        }
    }
}



/*  清除浮动
 -------------------------- */
/*  example:
    .article {
        @include clearfix();
    }

    out:
    .article:before,
    .article:after {
        content: "";
        display: table;
    }

    .article:after {
        clear: both;
    }
 -------------------------- */
@mixin clearfix() {

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

/*  css3前缀
 -------------------------- */
/*  example:
    .border_radius { 
        @include css3(transition, 0.5s); 
    }

    out:
    .border_radius { 
        -webkit-transition: 0.5s; 
        -moz-transition: 0.5s; 
        -ms-transition: 0.5s; 
        -o-transition: 0.5s; 
        transition: 0.5s; 
    }
 -------------------------- */
@mixin css3($property, $value) {

    @each $prefix in -webkit-,
    -moz-,
    -ms-,
    -o-,
    '' {
        #{$prefix}#{$property}: $value;
    }
}



/*  BEM
 -------------------------- */
@mixin b($block) {
    $B: $namespace+'-'+$block !global;

    .#{$B} {
        @content;
    }
}

@mixin e($element) {
    $E: $element !global;
    $selector: &;
    $currentSelector: "";

    @each $unit in $element {
        $currentSelector: #{$currentSelector + "." + $B + $element-separator + $unit + ","};
    }

    @if hitAllSpecialNestRule($selector){
        @at-root {
            #{$selector} {
                #{$currentSelector} {
                    @content;
                }
            }
        }
    } 

    @else {
        @at-root {
            #{$currentSelector} {
                @content;
            }
        }
    }
}

@mixin m($modifier) {
    $selector: &;
    $currentSelector: "";

    @each $unit in $modifier {
        $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ","};
    }
    
    @at-root {
        #{$currentSelector} {
            @content;
        }
    }
}

@mixin m-separ($modifier, $E-flag: false) {
    $selector: &;
    $currentSelector: "";

    @each $unit in $modifier {
        $currentSelector: #{$currentSelector + & + '-' + $unit + ","};
    }
    @if $E-flag{
        @at-root {
            .#{$B}{
                #{$currentSelector} {
                    @content;
                }
            }
        }

    } @else {
        @at-root {
            #{$currentSelector} {
                @content;
            }
        }
    }
}


/*  example:
    .border_radius { 
        @include configurable-m(m){
            width: 0px;
        };
    }

    out:
    .border_radius .ft-timeline--m {
        width: 0px; 
    }
 -------------------------- */
@mixin configurable-m($modifier) {
    $selector: &;
    $interpolation: '';

    @at-root {
        #{$selector} {
            .#{$B+$interpolation+$modifier-separator+$modifier} {
                @content;
            }
        }
    }
}

/*  状态
 -------------------------- */
/*  example:
    div{
        @include when(selected){
            color: red;
        }
    }

    out:
    div.is-selected {
        color: red;
    }
 -------------------------- */
@mixin when($state) {
    @at-root {
        &.#{$state-prefix + $state} {
            @content;
        }
    }
}

/*  伪类
 -------------------------- */
/*  example:
    div{
        @include pseudo(after){
            display: inline-block;
            content: '';
        }
    }

    out:
    div:after {
        display: inline-block;
        content: "";
    }
 -------------------------- */
@mixin pseudo($pseudo) {
    @at-root #{&}#{':#{$pseudo}'} {
@content
}
}



/*  Placeholder
 -------------------------- */
@mixin placeholder {
    &::-webkit-input-placeholder {
        @content
    }

    &::-moz-placeholder {
        @content
    }

    &:-ms-input-placeholder {
        @content
    }
}